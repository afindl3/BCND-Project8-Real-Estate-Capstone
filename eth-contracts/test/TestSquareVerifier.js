const SquareVerifier = artifacts.require('SquareVerifier');
const validProof = require('./valid-proof.json');
const invalidProof = require('./invalid-proof.json');

contract('TestSquareVerifier', accounts => {

  describe('verify proofs', function () {
    beforeEach(async function () {
      // define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
      this.contract = await SquareVerifier.new({ from: accounts[0] });
    })

    it('should pass when verifying when correct proof', async function () {
      // Test verification with correct proof
      // - use the contents from proof.json generated from zokrates steps

      // AF - Proof generated when running zokrates (zokrates/code/square/proof.json copied to valid-proof.json)
      try {
        await this.contract.verifyTx(validProof.proof.a, validProof.proof.b, validProof.proof.c, validProof.inputs);
      } catch (error) {
        console.log('          ', error.message)
      }
    })

    it('should fail when verifying with incorrect proof', async function () {
      // Test verification with incorrect proof

      // AF - Modified random characters in the addresses of valid-proof.json (to create invalid-proof.json)
      try {
        await this.contract.verifyTx(invalidProof.proof.a, invalidProof.proof.b, invalidProof.proof.c, invalidProof.inputs);
      } catch (error) {
        console.log('          ', error.message)
      }
    })
  });
  
})
